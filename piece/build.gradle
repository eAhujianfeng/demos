plugins {
    id 'java'
    id 'application'
    id 'eclipse'
    id "org.sonarqube" version "2.6"
    id 'io.spring.dependency-management' version "1.0.5.RELEASE"
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'application'
    apply plugin: 'eclipse'
    
    repositories {
        jcenter()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }

    targetCompatibility = 1.8
    sourceCompatibility = 1.8


    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
    
    dependencies {
        
        // Use JUnit test framework
        testCompile 'junit:junit:4.+'
        testCompile 'org.hamcrest:hamcrest-core:1.3'
    }
}

repositories {
  jcenter()
  maven {
    url "https://oss.sonatype.org/content/repositories/snapshots/"
  }
}

dependencyManagement {
  imports {
    mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.347'
  }
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.slf4j:slf4j-log4j12:1.7.5'
    
    testCompile 'junit:junit:4.+'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
}

configurations.all {
      resolutionStrategy.eachDependency { DependencyResolveDetails details ->
          if (details.requested.group.equals('io.reactivex.rxjava2')) {
              details.useVersion '2.+'
          }
      }
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    def profile = project.findProperty('profile');
    if (profile == null || profile.isEmpty()) {
        profile = "development";
    }
    
    with copySpec {
        from "${projectDir}/config-development.properties"
        
        filesMatching('*.properties') {
            // replace @var@ with specific value
            filter( ReplaceTokens, tokens:['app.name' : project.name, 'app.version':project.version], 'app.stage':profile)
        }
        rename 'config-.*\\.properties', "config.properties"
    }
}
