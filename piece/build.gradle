plugins {
    id 'java'
    id 'application'
    id 'eclipse'
    id 'net.ltgt.errorprone' version '0.0.13'
    id "org.sonarqube" version "2.6"
    id 'io.spring.dependency-management' version "1.0.5.RELEASE"
}

dependencyManagement {
  imports {
    mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.347'
  }
}

mainClassName="library.BugsnagNotStop"

dependencies {
    compile 'com.google.guava:guava:23.+'
    compile 'com.bugsnag:bugsnag:3.+'

    compile 'org.apache.commons:commons-lang3:3.+'
    compile 'commons-io:commons-io:2.+'
    compile 'commons-codec:commons-codec:1.+'
    compile 'commons-dbutils:commons-dbutils:1.+'
    compile 'commons-validator:commons-validator:1.+'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.+'
    compile 'com.squareup.retrofit2:converter-jackson:2.+'
    compile 'com.squareup.retrofit2:retrofit:2.+'

    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.slf4j:slf4j-log4j12:1.7.5'

    compile 'io.reactivex.rxjava2:rxjava:2.+'

    compile 'org.apache.commons:commons-csv:1.+'
    compile 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.+'
    compile 'io.airlift:airline:0.+'
    compile 'com.google.protobuf:protobuf-java:3.5.1'
    compile 'org.json:json:20180130'

    // Use JUnit test framework
    testCompile 'junit:junit:4.+'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    
}

repositories {
    jcenter()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

targetCompatibility = 1.8
sourceCompatibility = 1.8


tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

configurations.all {
      resolutionStrategy.eachDependency { DependencyResolveDetails details ->
          if (details.requested.group.equals('io.reactivex.rxjava2')) {
              details.useVersion '2.+'
          }
      }
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    def profile = project.findProperty('profile');
    if (profile == null || profile.isEmpty()) {
        profile = "development";
    }
    
    with copySpec {
        from "${projectDir}/config-development.properties"
        
        filesMatching('*.properties') {
            // replace @var@ with specific value
            filter( ReplaceTokens, tokens:['app.name' : project.name, 'app.version':project.version], 'app.stage':profile)
        }
        rename 'config-.*\\.properties', "config.properties"
    }
}